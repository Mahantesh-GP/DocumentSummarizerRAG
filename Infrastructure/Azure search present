🔹 Slide: Blob Storage
🔷 Title: Blob Storage
Description:

All source files (primarily CSVs) are stored securely in Azure Blob Storage.

These files serve as the primary data source for downstream indexing and querying.

The structure and naming conventions can help later tagging or filtering if needed.

🔹 Slide: Indexer
🔷 Title: Azure Cognitive Search Indexer
Description:

The indexer reads CSV content directly from Blob Storage — no OCR required.

It parses the structured rows and columns and pushes them into the Azure Search Index.

You can optionally attach a skillset for enrichment (not used in this case).

🔹 Slide: Azure Search Index
🔷 Title: Azure Cognitive Search Index
Description:

This is the searchable store of all parsed and indexed content from the CSV files.

Fields like fullname, address, or documentKey are stored here for query execution.

Supports both text search and semantic search as per the configuration.

🔹 Slide: User Interface
🔷 Title: User Interface
Description:

The frontend UI allows users to enter search queries — for example, names like "Smith John".

These queries are passed to the backend API for further processing.

The results are shown in a user-friendly format after LLM reasoning is complete.

🔹 Slide: API Layer
🔷 Title: API Layer
Description:

Acts as a bridge between the UI and backend components like the Knowledge Agent.

It receives user input, formats the prompt and query, and calls the Knowledge Agent.

Ensures security, logging, and consistent communication across components.

🔹 Slide: Knowledge Agent
🔷 Title: Knowledge Agent (LLM-Powered Orchestrator)
Description:

The Knowledge Agent is powered by Azure OpenAI LLM (e.g., GPT-4-1-mini).

It analyzes the user query, plans the flow (e.g., search → rank → summarize), and invokes Azure Search.

Uses semantic ranking to improve result quality, even for name variations and fuzzy matches.

🔹 Slide: Final Output
🔷 Title: Final Output
Description:

The final result is generated by the Knowledge Agent after reasoning over search results.

It may include name matches like “Smith John” vs “John J Smith, Jr” based on context.

This output is returned to the user for review, confirmation, or further action.
