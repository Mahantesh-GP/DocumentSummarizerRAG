
using Azure;
using Azure.Search.Documents.Indexes;
using Azure.Search.Documents.Indexes.Models;
using Azure.AI.OpenAI;
using Azure.Search.Documents.Indexes.Models.Knowledge;

var searchEndpoint = new Uri("https://<your-search-service>.search.windows.net");
var adminKey = new AzureKeyCredential("<your-admin-key>");
var indexName = "earth_at_night";
var agentName = "earth-search-agent";

// Create SearchIndexClient
var indexClient = new SearchIndexClient(searchEndpoint, adminKey);

// Define the Azure OpenAI vectorizer parameters
var vectorizerParams = new AzureOpenAIVectorizerParameters
{
    ResourceUrl = "<your-openai-endpoint>", // e.g., https://<your-resource>.openai.azure.com
    DeploymentName = "<your-openai-deployment>", // e.g., gpt-35-turbo
    ModelName = "<your-gpt-model>" // e.g., gpt-35-turbo
};

// Create KnowledgeAgent model using AzureOpenAI
var knowledgeAgentModel = new KnowledgeAgentAzureOpenAIModel
{
    AzureOpenAIParameters = vectorizerParams
};

// Define target index
var targetIndex = new KnowledgeAgentTargetIndex(indexName)
{
    DefaultRerankerThreshold = 5
};

// Create the KnowledgeAgent
var knowledgeAgent = new KnowledgeAgent(agentName)
{
    Models = { knowledgeAgentModel },
    TargetIndexes = { targetIndex }
};

// Register agent (create or update)
indexClient.CreateOrUpdateKnowledgeAgent(knowledgeAgent);

Console.WriteLine($"Knowledge agent '{agentName}' created or updated successfully.");
