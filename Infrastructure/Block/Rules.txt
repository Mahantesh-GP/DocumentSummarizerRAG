
@page "/example"

<h3>Configure</h3>

<div>
    <label for="name">Name</label>
    <input id="name" type="text" class="form-control mb-2" placeholder="Name your GPT" />

    <label for="description">Description</label>
    <input id="description" type="text" class="form-control mb-2" placeholder="A GPT that answers only math-related questions" />

    <label for="instructions">Instructions</label>
    <textarea id="instructions" class="form-control mb-2" placeholder="Write the details here"></textarea>

    <div class="d-flex align-items-center">
        <label class="me-2">Example</label>
        <button @onclick="AddExample" class="btn btn-primary" disabled="@(examples.Count >= 4)">+</button>
    </div>

    @for (int i = 0; i < examples.Count; i++)
    {
        <input type="text" @bind="examples[i]" class="form-control mb-2" placeholder="Write the example" />
    }

    <button @onclick="SaveExamples" class="btn btn-success mt-2">Save</button>
</div>

<h3>Preview</h3>
<div class="d-flex flex-wrap">
    @foreach (var example in examples)
    {
        <button class="btn btn-outline-primary m-1 example-box" @onclick="() => SelectExample(example)">
            @example
        </button>
    }
</div>

@if (message != null)
{
    <p class="text-success">@message</p>
}

@code {
    private List<string> examples = new List<string>();
    private string? message;
    private string? selectedExample;

    private void AddExample()
    {
        if (examples.Count < 4)
        {
            examples.Add(string.Empty);
        }
    }

    private async Task SaveExamples()
    {
        var response = await Http.PostAsJsonAsync("api/examples/save", examples);
        if (response.IsSuccessStatusCode)
        {
            message = "Examples saved successfully!";
        }
        else
        {
            message = "Error saving examples.";
        }
    }

    private void SelectExample(string example)
    {
        selectedExample = example;
        message = $"Selected: {example}";
    }

    [Inject] HttpClient Http { get; set; }
}
